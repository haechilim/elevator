1. 순서도

(1) 기본
엘리베이터의 현재 층수는 floor 변수에 저장한다.
stops 배열은 승강기가 멈출 층에 대한 정보를 저장한다.
-> 멈추지 않음(NONE), 올라갈때 멈춤(UP), 내려갈때 멈춤(DOWN), 양쪽방향 모두 멈춤(BOTH)
direction 변수는 다음과 같은 값을 갖는다.
-> 정지(STOP), 올라가는중(UP), 내려가는중(DOWN)
반복적으로 엘리베이터의 층수와 방향을 결정한다.

(2) 외부 버튼을 누르는 경우
예를 들어 3층에서 올라가는 버튼을 누르면 배열 3번째 요소에 UP 값을 넣는다.
그런데 3번째 요소에 이미 DOWN 값이 있었다면, UP이 아니라 BOTH를 넣는다.

(3) 승강기가 1층에 멈춰있고 3층에서 올라가는 버튼을 누르는 경우
stops 배열 3번째 요소에 UP을 넣는다.
엘리베이터가 3층에 왔을때 현재 올라가는 중이므로 문을 연다.

(4) 승강기가 1층에 멈춰있고 3층에서 내려가는 버튼을 누르는 경우
stops 배열 3번째 요소에 DOWN을 넣는다.
엘리베이터가 3층에 왔을때 현재 올라가는 중이므로 문을 열지 않는다.
엘리베이터가 멈춰야 되는지 검사하는데 배열 3번째 요소에 DOWN값이 있으므로 멈추지 않는다.
엘리베이터가 더 올라가야 하는지 검사하는데 더 올라갈 필요가 없으므로 방향을 바꾼다.
다시 반복문이 시작되고 엘리베이터가 멈춰야 하는지 검사하는데 이제는 내려가는 중이므로 문을 연다.

(5) 내부 버튼을 누르는 경우
누른 버튼의 층수에 해당하는 stops 배열 요소에 값을 넣는다. (외부 버튼과 동일)
이때 버튼 층수가 현재 엘리베이터 층수보다 높으면 UP을 반대라면 DOWN을 넣는다.
그래야만 엘리베이터가 그냥 지나치지 않고 멈춰서 문을 열게 된다.




2. 프로그램 사용방법을 설명하시오.

javascript 폴더에 elevator.html 파일을 열어서 페이지를 웹브라우저에 띄운다
승강기는 1층에서 시작하며 승강기 기준으로 왼쪽에 있는 버튼은 엘리베이터 외부 버튼 오른쪽은 내부 버튼이다.
버튼을 누르면 승강기가 움직이고 승강기가 움직이는 동안 버튼을 계속 입력할수 있다.

3. 프로그램의 확장 가능성에 대해 설명하시오.

승강기가 움직이는 건물의 최고 층은 값을 변경할수 있지만 가장 낮은 층은 지하(음수)가 될수 없다(층수가 음수가 되면 배열에 인덱스가 음수가 되기 때문에 오류가 생긴다.) 이 문제는 층수 - 1 을 인덱스로 사용하는 것이 아니라 층수를 바로 인덱스로 바꿔주는 함수를 만들면 해결할수 있다.
프로그램을 완성하고 나니까 실수로 같은 층에서 올라가는 버튼과 내려가는 버튼 모두 눌렀을때 승강기 문이 두번 열리는 이유를 알게 되었다. 실제로 엘리베이터를 사용하면서 실수로 2개의 버튼 모두 눌렀는데 엘리베이터문이 2번 열리는 것이 불필요한 동작이라고 생각했었다.
이는 내부에서 누른 버튼을 조사하여 불필요한 동작을 하지 않도록 고칠수 있다.
현재는 승강기가 1대만 동작하지만 백화점 같이 큰 건물에는 2대 이상의 엘리베이터가 동작한다.하지만 2대의 엘리베이터가 같이 움직이거나 비효율적으로 움직이기도 한다. 이런점을 보완하여 2대 이상의 엘리베이터가 정보를 공유하며 움직인다면 기다리는 시간이 휠씬 짧아질수 있다.

4. 팀원의 역할 분담에 대해 자세히 기록하시오.

나는 처음에 자바로 프로그램을 짰다. 눌린 버튼과 엘리베이터의 층수를 화면에 표시하지 못해 문자로 표시했다. 하지만 소프트웨어 공모전 요구사항에 맞추어야 했기 때문에 자바 스크립트로 프로그램을 옮겼다. 화면 표시를 제외하면 기존에 짰던 자바와 다를것이 별로 없었고 화면 표시는 현재 프로그램 관련일을 하고 계시는 아빠한테 부탁했다.

